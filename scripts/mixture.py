import pandas as pd
import numpy as np



states = ["AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DC", "DE", "FL", "GA",
          "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD",
          "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ",
          "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC",
          "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY"]






means = [0.03500000000000003, 0.0, 0.010000000000000009, 0.0050000000000000044, 0.0, 0.0, 0.0, 1, 0.0, 0.17000000000000004, 0.0, 0.0, 0.73, 0.94, 1.0, 0.040000000000000036, 0.125, 0.0, 1, 0.31000000000000005, 0.815, 0.17500000000000004, 1.0, 1.0, 0.555, 1.0, 0.58, 0.99, 0.27, 1.0, 0.795, 1.0, 0.995, 1.0, 1.0, 1.0, 0.97, 1.0, 1.0, 1.0, 1.0, 0.31000000000000005, 0.32999999999999996, 0.0, 0.83, 0.375, 1.0, 0.79, 1.0, 0.99, 1.0, 0.98, 0.9, 1.0, 1.0, 1.0, 0.945, 0.975, 0.995, 0.57, 1.0, 1.0, 0.0, 0.9, 0.505, 0.505, 1.0, 1.0, 0.81, 0.89, 0.27, 1.0, 0.995, 1.0, 1.0, 0.995, 0.21999999999999997, 0.05500000000000005, 0.0050000000000000044, 0.855, 1.0, 0.995, 1.0, 1.0, 0.88, 0.99, 1.0, 0.0, 0.0, 0.0, 0.040000000000000036, 1.0, 0.43000000000000005, 0.795, 0.0, 1.0, 1, 0.0, 0.0050000000000000044, 0.97, 1, 0.695, 0.16500000000000004, 0.04500000000000004, 0.20499999999999996, 0.0, 1, 1, 1.0, 1.0, 1, 0.27, 0.83, 0.875, 0.0, 1.0, 0.0, 1.0, 1, 0.38, 0.4, 0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.98, 1.0, 0.8, 0.99, 0.5, 0.18000000000000005, 0.040000000000000036, 0.0, 0.98, 1.0, 1.0, 0.98, 1.0, 0.675, 1.0, 1.0, 1.0, 0.97, 1.0, 0.31499999999999995, 0.755, 0.515, 0.0, 0.0, 1.0, 0.0, 1.0, 0.345, 0.025000000000000022, 0.015000000000000013, 0.0050000000000000044, 0.0, 1.0, 0.0, 0.235, 0.0, 0.81, 0.59, 0.08499999999999996, 0.015000000000000013, 0.0, 0.89, 0.05500000000000005, 0.0, 0.37, 0.0, 1.0, 0.13, 0.0, 0.0, 0.0, 1, 1.0, 0.885, 1, 1.0, 1.0, 1, 1, 0.96, 0.25, 1.0, 1.0, 1.0, 1.0, 0.77, 1.0, 1.0, 1.0, 0.405, 0.06499999999999995, 0.10499999999999998, 0.0, 0.0050000000000000044, 1.0, 0.19999999999999996, 0.36, 0.8, 0.995, 0.010000000000000009, 0.91, 1.0, 0.505, 1, 0.025000000000000022, 0.6, 0.37, 0.845, 0.535, 0.0, 1.0, 0.020000000000000018, 1.0, 0.22499999999999998, 0.0, 0.0050000000000000044, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.015000000000000013, 0.0, 0.705, 1.0, 0.17500000000000004, 0, 1.0, 0.0, 0.010000000000000009, 0.28, 0.020000000000000018, 0.725, 0.0, 0.0, 0.995, 0.515, 0.025000000000000022, 0.0, 0.16000000000000003, 0.0, 0.78, 0.995, 1.0, 0.995, 0.3633333333333333, 0.06499999999999995, 0.91, 1.0, 0.805, 1.0, 1, 1.0, 0.83, 1.0, 0.995, 0.55, 1.0, 1.0, 0.0, 0.835, 0.68, 0.235, 0.20499999999999996, 0.99, 1.0, 1, 1.0, 0.575, 1.0, 1.0, 1.0, 0.43999999999999995, 0.99, 1.0, 0.71, 0.955, 1, 1.0, 0.985, 0.345, 1.0, 0.14, 0.265, 0.19999999999999996, 0.17500000000000004, 0.845, 1.0, 0.645, 0.255, 0.06499999999999995, 1.0, 0.06999999999999995, 0.0, 0.0, 0.33999999999999997, 0.0, 1.0, 0.06000000000000005, 1.0, 0.76, 1.0, 0.10499999999999998, 0.10499999999999998, 0.020000000000000018, 0.0050000000000000044, 0.0, 0.0, 0.0, 0.245, 1.0, 0.08999999999999997, 0.77, 0.995, 0.9, 0.75, 1.0, 0.895, 0.245, 0.32999999999999996, 0.93, 0.345, 0.85, 0.030000000000000027, 0.255, 0.24, 0.0, 0.0050000000000000044, 0.785, 0.235, 0.22499999999999998, 0.56, 1, 1.0, 1.0, 0.18000000000000005, 0.0, 0.0, 0.395, 0.22999999999999998, 1.0, 0.0, 0.09999999999999998, 0.015000000000000013, 0.015000000000000013, 0.010000000000000009, 0.18500000000000005, 1.0, 0.0, 0.015000000000000013, 0.0, 0.975, 0.0, 0.7, 0.0050000000000000044, 0.0, 0, 0.26, 0.815, 0.0, 0.53, 0.04500000000000004, 0.0, 0.0, 0.0, 0.0, 0.955, 0.995, 0.0, 1.0, 0.0, 1.0, 0.265, 0.06499999999999995, 0.18999999999999995, 0.0, 0.06000000000000005, 0.0, 0.0, 1.0, 0.995, 0.93, 0.25, 0.535, 1.0, 0.995, 0.995, 0.030000000000000027, 0.0, 0.0, 0.0, 0.695, 0.0, 0.19499999999999995, 1, 1.0, 0.66, 0.020000000000000018, 0.775, 1.0, 0.255, 0.775, 0.995, 1.0, 0.995, 1.0, 0.27, 0.0, 0.30000000000000004, 1.0, 1.0, 0.535, 0.725, 1.0, 0.485, 1, 1.0, 1.0, 0.030000000000000027, 0.235, 0.0, 0.0, 0.0, 0.010000000000000009, 0.26, 0.0]
m = np.ones((435,435)) * .018
np.fill_diagonal(m, .025)

x = np.rint(means)
print(np.sum(x))

def winner(point):
    r = np.rint(point)
    v = np.sum(r)
    if v >= 218:
        return 1
    else:
        return 0

data = np.random.multivariate_normal(means, m, 100000)
print(data[0])
t = 0
for p in data:
    t += winner(p)

print(t)